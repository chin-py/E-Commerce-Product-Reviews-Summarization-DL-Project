
# options by claude for selecting the reviews button 

try:
    # Option 1: Using partial text match for "reviews" (most flexible)
    all_reviews_button = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//span[contains(text(), 'reviews')]"))
    )
    all_reviews_button.click()
except:
    try:
        # Option 2: Using the specific class names
        all_reviews_button = WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.CSS_SELECTOR, "div._23J90q.RcXBOT"))
        )
        all_reviews_button.click()
    except:
        try:
            # Option 3: More specific XPath with partial text match
            all_reviews_button = WebDriverWait(driver, 10).until(
                EC.element_to_be_clickable((By.XPATH, "//div[@class='_23J90q RcXBOT']//span[contains(text(), 'All') and contains(text(), 'reviews')]"))
            )
            all_reviews_button.click()
        except:
            print("‚ùå Could not find reviews button with any of the attempted selectors.")
            driver.quit()

# ----------------------------------------------------------------------------

The issue with your code is that you're trying to use two class names as a single class name string. When an element has multiple CSS classes, you need to use a CSS selector or XPath instead of By.CLASS_NAME.
Here are the corrected approaches:
########
Option 1: Using CSS Selector (Recommended)
pythonreviews = []

for _ in range(MAX_PAGES):
    time.sleep(5)
    
    for block in review_blocks:
        try:
            rating = block.find_element(By.CSS_SELECTOR, ".XQDdHH.Ga3i8K").text
        except:
            rating = "N/A"
        
        reviews.append(rating)
##################
Option 2: Using XPath
pythonreviews = []

for _ in range(MAX_PAGES):
    time.sleep(5)
    
    for block in review_blocks:
        try:
            rating = block.find_element(By.XPATH, ".//div[contains(@class, 'XQDdHH') and contains(@class, 'Ga3i8K')]").text
        except:
            rating = "N/A"
        
        reviews.append(rating)
############
Option 3: Using just one class name
pythonreviews = []

for _ in range(MAX_PAGES):
    time.sleep(5)
    
    for block in review_blocks:
        try:
            rating = block.find_element(By.CLASS_NAME, "XQDdHH").text
        except:
            rating = "N/A"
        
        reviews.append(rating)
Key differences:

In CSS selector, multiple classes are combined with dots and no spaces: .XQDdHH.Ga3i8K
Note: I also corrected "Ga3I8K" to "Ga3i8K" (lowercase 'i') based on your HTML
Added exception handling to avoid crashes when element isn't found
The rating value should be "5" based on your HTML sample

The CSS selector approach (Option 1) is generally the most reliable and readable.


#------------------------------------------------------------------------------------------